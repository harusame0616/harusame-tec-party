---
import type { Page } from "astro";
import type { Post } from "./blog-client";

interface Props {
  page: Page<
    Pick<Post, "tags" | "id" | "publishedAt" | "title" | "content" | "category">
  >;
  title: string;
}
const { page, title } = Astro.props;

function stripTag(htmlString: string) {
  return htmlString.replace(/<\/?[^>]+>/gi, "");
}

function format(date: Date) {
  return date.toLocaleDateString();
}
---

<div>
  <h1 class="mb-8 text-xl font-bold">{title}</h1>
  <div class="grid grid-cols-1 gap-x-10 md:grid-cols-[repeat(2,1fr)]">
    {
      page.data.map((post) => (
        <article
          class="group relative row-span-5 mb-4 grid grid-rows-[subgrid] border border-solid border-border p-4 shadow-sm transition-all hover:shadow-lg md:mb-10"
          aria-labelledby={`title-${post.id}`}
        >
          <div class="text-xs text-muted-foreground">
            <div>投稿日： {format(post.publishedAt)}</div>
          </div>
          <div class="text-xs" />
          <h2 class="text-lg font-bold" id={`title-${post.id}`}>
            {post.category.name}：
            <a
              href={`/blog/posts/${post.id}/`}
              rel="prefetch"
              class="before:absolute before:inset-0"
            >
              {post.title}
            </a>
          </h2>
          <div class="mt-4 line-clamp-3 text-sm tracking-wider text-muted-foreground">
            {stripTag(post.content).slice(0, 120)}
          </div>
          <div class="mt-4">
            <ul aria-label="タグ" class="flex flex-wrap gap-2">
              {post.tags.map((tag) => (
                <li>
                  <a
                    href={`/blog/tags/${tag.id}/pages/1/`}
                    class="relative z-10 inline-block min-w-[4rem] max-w-[180px] truncate rounded-full border border-secondary px-2 text-center transition-all hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground"
                    rel="prefetch"
                  >
                    {tag.name}
                  </a>
                </li>
              ))}
            </ul>
          </div>
        </article>
      ))
    }
  </div>
  <nav class="text-center">
    {
      page.currentPage !== 1 && (
        <a href={`/blog/pages/${page.currentPage - 1}/`} rel="prefetch">
          戻る
        </a>
      )
    }
    {
      page.currentPage !== 1 && page.currentPage !== page.lastPage && (
        <span class="mx-4">|</span>
      )
    }
    {
      page.currentPage !== page.lastPage && (
        <a href={`/blog/pages/${page.currentPage + 1}/`} rel="prefetch">
          進む
        </a>
      )
    }
  </nav>
</div>
