---
import type { Post } from "@/features/blog/blog-client";
import type { GetStaticPaths } from "astro";
import { Separator } from "@/components/ui/separator";
import { Tag } from "@/features/blog/components/tag";
import { createBlogClient } from "@/features/blog/create-blog-client";
import { CommentForm } from "@/features/comment/components/comment-form";
import { CommentListContainer } from "@/features/comment/components/comment-list-container";
import Layout from "@/layouts/Layout.astro";
import { highLight } from "@/lib/code-highlight";
import "highlight.js/styles/atom-one-dark.css";

export type Props = {
  post: Post;
};

export const getStaticPaths: GetStaticPaths = async () => {
  const blog = createBlogClient();
  const { posts } = await blog.getAllPost({
    fields: ["tags", "category", "id", "publishedAt", "title", "content"],
  });
  return posts.map((post) => ({
    params: {
      postId: post.id,
    },
    props: {
      post,
    },
  }));
};

const { post } = Astro.props;
const content = highLight(post.content);
---

<Layout title={`${post.title} - はるさめ.dev`}>
  <h1 class="mb-1 text-3xl font-bold">{post.title}</h1>
  <ul aria-label="タグ" class="mt-2 flex flex-wrap gap-2">
    {
      post.tags.map((tag) => (
        <li>
          <Tag tagId={tag.id}>{tag.name}</Tag>
        </li>
      ))
    }
  </ul>
  <div class="text-xs text-muted-foreground">
    投稿日：{post.publishedAt}
  </div>
  <div class="my-4">
    <Separator />
  </div>

  <div class="prose max-w-none" set:html={content} />
  <section slot="append" class="mt-8 rounded-sm border p-4">
    <h2 class="mb-4 text-xl font-bold">コメント</h2>
    <CommentListContainer articleSlug={post.id} client:only="react" />
    <Separator className="my-8" />
    <CommentForm slug={post.id} client:only="react" />
  </section>
</Layout>
