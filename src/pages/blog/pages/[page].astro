---
import type { GetStaticPaths } from "astro";
import Layout from "../../../layouts/Layout.astro";
import { createBlogClient } from "../../../features/blog/create-blog-client";

export const getStaticPaths = (async ({ paginate }) => {
  const blog = createBlogClient();
  const { posts } = await blog.getAllPost({
    fields: ["tags", "category", "id", "publishedAt", "title", "content"],
  });
  return paginate(posts, { pageSize: 6 });
}) satisfies GetStaticPaths;

const { page } = Astro.props;

function stripTag(htmlString: string) {
  return htmlString.replace(/<\/?[^>]+>/gi, "");
}

function format(date: Date) {
  return date.toLocaleDateString();
}
---

<Layout title={`記事一覧 ${page.currentPage} ページ - はるさめ Tec Party`}>
  <h1 class="font-bold text-xl mb-8">記事一覧</h1>
  <div class="grid grid-cols-1 md:grid-cols-[repeat(2,1fr)] gap-x-10">
    {
      page.data.map((post) => (
        <article
          class="grid grid-rows-[subgrid] row-span-5 mb-4 md:mb-10 hover:shadow-lg group shadow-sm p-4 transition-all border-border border-solid border"
          aria-labelledby={`title-${post.id}`}
        >
          <div class="text-muted-foreground text-xs">
            <div>投稿日： {format(post.publishedAt)}</div>
          </div>
          <div class="text-xs" />
          <h2 class="font-bold text-lg" id={`title-${post.id}`}>
            {post.category?.name}：
            <a href={`/blog/posts/${post.id}`}>{post.title}</a>
          </h2>
          <div class="line-clamp-3 text-sm tracking-wider text-muted-foreground mt-4">
            {stripTag(post.content).slice(0, 120)}
          </div>
          <div class="mt-4">
            <ul aria-label="タグ" class="flex flex-wrap gap-2">
              {post.tags.map((tag) => (
                <li>
                  <a
                    href={`/posts?tag=${tag.name}`}
                    class="border-secondary border rounded-full px-2 min-w-[4rem] inline-block text-center hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground transition-all text-ellipsis overflow-hidden whitespace-nowrap max-w-[180px]"
                  >
                    {tag.name}
                  </a>
                </li>
              ))}
            </ul>
          </div>
        </article>
      ))
    }
  </div>
  <nav class="text-center">
    {
      page.currentPage !== 1 && (
        <a href={`/blog/pages/${page.currentPage - 1}`}>戻る</a>
      )
    }
    {
      page.currentPage !== 1 && page.currentPage !== page.lastPage && (
        <span class="mx-4">|</span>
      )
    }
    {
      page.currentPage !== page.lastPage && (
        <a href={`/blog/pages/${page.currentPage + 1}`}>進む</a>
      )
    }
  </nav>
</Layout>
